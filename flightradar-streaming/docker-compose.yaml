version: "3.7"
networks:
  kafka-logstash-spark-collector:
    external: true

services:
  cp-zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    restart: unless-stopped
    container_name: zookeeper
    ports:
    - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-logstash-spark-collector

  cp-broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    restart: unless-stopped
    container_name: broker
    depends_on:
      - cp-zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - ./broker-properties/server.properties:/etc/kafka/server.properties
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CREATE_TOPICS: "flights-raw:1:1:compact,flights-enriched:1:1:compact"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    networks:
      - kafka-logstash-spark-collector

  init-broker:
    image: confluentinc/cp-kafka:latest
    hostname: init
    container_name: init-broker
    depends_on:
      - cp-zookeeper
      - cp-broker
    networks:
      - kafka-logstash-spark-collector
    command: |
      /bin/sh -c "
      # Blocks until kafka gets reachable
      kafka-topics --bootstrap-server broker:29092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic flights --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic flights-enriched --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list

      exit

      "


  cp-schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    restart: unless-stopped
    container_name: schema-registry
    depends_on:
    - cp-zookeeper
    - cp-broker
    ports:
    - "28081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://broker:29092"  
    networks:
      - kafka-logstash-spark-collector
  
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.4.2
    container_name: filebeat
    restart: unless-stopped
    user: root
    depends_on:
      - cp-zookeeper
      - cp-broker
    networks:
      - kafka-logstash-spark-collector
    environment:
        - strict.perms=false
    volumes:
        - './filebeat-conf/filebeat.yaml:/usr/share/filebeat/filebeat.yml:ro'
        - './data:/usr/share/filebeat/data:rw'
        - '../flightradar-collector/collector/input:/usr/share/services/node'

  magic:
    image: digitsy/kafka-magic
    container_name: kafka-magic
    restart: unless-stopped
    ports:
      - "20980:80"
    volumes:
      - ./kafka-magic-conf:/config
    environment:
      KMAGIC_CONFIG_STORE_TYPE: "file"
      KMAGIC_CONFIG_STORE_CONNECTION: "Data Source=/config/KafkaMagicConfig.db;"
      KMAGIC_CONFIG_ENCRYPTION_KEY: "iwoikg908230-2-0*(^*(@23g2)(&2h"
      KMAGIC_ALLOW_TOPIC_DELETE: "true"
      KMAGIC_ALLOW_SCHEMA_DELETE: "true"
    depends_on:
      - cp-broker
      - cp-zookeeper
      - cp-schema-registry
    networks:
      - kafka-logstash-spark-collector

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    hostname: control-center
    container_name: control-center
    depends_on:
      - cp-zookeeper
      - cp-broker
      - cp-schema-registry
    ports:
      - "29021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 29021
    networks:
      - kafka-logstash-spark-collector
